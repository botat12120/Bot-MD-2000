import { canLevelUp, xpRange } from '../lib/levelling.js'
import { createCanvas, loadImage } from 'canvas'
import { levelup } from '../lib/canvas.js'
import fs from 'fs'

let handler = async (m, { conn }) => {
    let name = conn.getName(m.sender)
    let user = global.db.data.users[m.sender]
    
    // ุงูุชุญูู ูู ุฅููุงููุฉ ุฑูุน ุงููุณุชูู
    if (!canLevelUp(user.level, user.exp, global.multiplier)) {
        let { min, xp, max } = xpRange(user.level, global.multiplier)
        throw `
โโโโโท *ุงููุณุชูู*
โข ุงูุงุณู : *${name}*
โข ุงููุณุชูู ุงูุญุงูู : *${user.level}*
โข ููุงุท XP ุงูุญุงููุฉ : *${user.exp}*
โข ููุงุท XP ุงููุงุฒูุฉ ูููุตูู ุฅูู ุงููุณุชูู ุงูุชุงูู : *${max - user.exp} XP*
โข ูุฌููุน ููุงุท XP ุงููุทููุจุฉ ูููุณุชูู ุงูุชุงูู : *${xp} XP*
โโโโโโโโโโโโโโโ

ุงูุช ุชุญุชุงุฌ ุฅูู *${max - user.exp} XP* ูุฑูุน ูุณุชูุงู.
`.trim()
    }

    let before = user.level * 1

    // ุฒูุงุฏุฉ ุงููุณุชูู ุญุชู ุงููุตูู ุฅูู ุงูุญุฏ ุงูุฃุนูู ุจูุงุกู ุนูู XP
    while (canLevelUp(user.level, user.exp, global.multiplier)) user.level++

    if (before !== user.level) {
        let teks = `๐ ูุจุฑูู ูุฏุฎููู ุงููุณุชูู ุงูุฌุฏูุฏ ${name}! ุงููุณุชูู:`
        let { min, xp, max } = xpRange(user.level, global.multiplier)

        // ุชุญููู ูุงูุจ ุงูุตูุฑุฉ
        let imgPath = '../src/lvlup_template.jpg'
        const template = await loadImage(imgPath)
        
        // ุฅุนุฏุงุฏ canvas
        const canvas = createCanvas(template.width, template.height)
        const ctx = canvas.getContext('2d')
        
        // ุฑุณู ุงูุตูุฑุฉ
        ctx.drawImage(template, 0, 0, canvas.width, canvas.height)

        // ุฅุนุฏุงุฏ ุงููุตูุต
        ctx.font = 'bold 30px Arial'
        ctx.fillStyle = '#FFFFFF'
        ctx.textAlign = 'center'
        
        // ูุชุงุจุฉ ุงููุตูุต ุนูู ุงูุตูุฑุฉ (ุนุฏุฏ ููุงุท XP ูุงููุณุชูู)
        ctx.fillText(`ุงููุณุชูู: ${user.level}`, canvas.width / 2, 50) // ูุณุชูู ุงููุณุชุฎุฏู
        ctx.fillText(`XP ุงูุญุงููุฉ: ${user.exp}`, canvas.width / 2, 100) // ููุงุท XP ุงูุญุงููุฉ
        ctx.fillText(`XP ุงููุชุจููุฉ: ${max - user.exp}`, canvas.width / 2, 150) // ููุงุท XP ุงููุชุจููุฉ ูููุตูู ูููุณุชูู ุงูุชุงูู

        // ุญูุธ ุงูุตูุฑุฉ
        const buffer = canvas.toBuffer()
        fs.writeFileSync('/tmp/levelup.jpg', buffer)

        let str = `
โโโท *ุงููุณุชูู*
โข ุงููุณุชูู ุงูุณุงุจู : *${before}*
โข ุงููุณุชูู ุงูุญุงูู : *${user.level}*
โข ููุงุท XP ุงูุญุงููุฉ : *${user.exp}*
โข ููุงุท XP ุงููุงุฒูุฉ ูููุตูู ุฅูู ุงููุณุชูู ุงูุชุงูู : *${max - user.exp} XP*
โโโโโโโโโโโโโโโ

โจ ุงุณุชูุฑ ูู ุงูุชูุงุนู ูุน ุงูุจูุช ูุฑูุน ูุณุชูุงู ุฃูุซุฑ! โจ
`.trim()

        try {
            // ุฅุฑุณุงู ุงูุตูุฑุฉ ุงููุนุฏูุฉ ูุน ุงููุต
            conn.sendFile(m.chat, '/tmp/levelup.jpg', 'levelup.jpg', str, m)
        } catch (e) {
            // ูู ุญุงูุฉ ูุฌูุฏ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุงูุตูุฑุฉุ ุฅุฑุณุงู ุงููุต ููุท
            m.reply(str)
        }
    }
}

handler.help = ['levelup']
handler.tags = ['xp']

// ุงูุฃูุงูุฑ ุงูุชู ูููู ุฃู ุชุณุชุฏุนู ูุฐุง ุงููุนุงูุฌ
handler.command = ['ููู', 'lvl', 'levelup', 'ูุณุชูุงู', 'ูุณุชูุง']

export default handler
